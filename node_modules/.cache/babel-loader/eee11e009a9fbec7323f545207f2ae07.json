{"ast":null,"code":"var _jsxFileName = \"/Users/Soheib/Documents/Git/react-interview/src/App.js\";\nimport React, { Component } from \"react\";\nimport { MdReplay, MdChevronLeft, MdFirstPage, MdLastPage } from \"react-icons/md\";\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\nimport Movie from \"./Movie\";\nimport Multiselect from \"./Multiselect\";\nimport FlipMove from \"react-flip-move\";\nimport { movies$ } from \"./movies\";\nimport \"./App.css\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filter: [],\n      display: 4,\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  getMovies() {\n    movies$.then(movies => this.setState({\n      movies: JSON.parse(JSON.stringify(movies)),\n      maxPages: Math.ceil(movies.length / this.state.display)\n    }, () => {\n      this.setState({\n        filteredMovies: this.state.movies\n      });\n    }));\n  }\n\n  refresh() {\n    this.getMovies();\n    this.setState({\n      filter: []\n    });\n    document.querySelectorAll(\".filter-container.categories .dropdown div\").forEach(el => {\n      el.classList.remove(\"selected\");\n    });\n  }\n\n  getIndex(id) {\n    let index = this.state.movies.findIndex(movie => movie.id === id);\n    if (index >= 0) return index;\n    return -1;\n  }\n\n  deleteMovie(id) {\n    let movies = this.state.movies;\n    let index = this.getIndex(id);\n\n    if (index >= 0) {\n      movies.splice(index, 1);\n      this.setState({\n        movies\n      }, () => {\n        this.setMaxPages();\n        this.getFilteredMovies();\n      });\n    }\n  }\n\n  likeMovie(id) {\n    let movies = this.state.movies;\n    movies[this.getIndex(id)].likes++;\n    this.setState({\n      movies\n    });\n  }\n\n  dislikeMovie(id) {\n    let movies = this.state.movies;\n    movies[this.getIndex(id)].dislikes++;\n    this.setState({\n      movies\n    });\n  }\n\n  getCategories() {\n    if (!this.state.movies) return null;\n    let categories = [];\n    this.state.movies.forEach(movie => {\n      categories.push(movie.category);\n    });\n    return categories.filter((key, idx) => categories.lastIndexOf(key) === idx);\n  }\n\n  selectCategory(category) {\n    let index = this.state.filter.findIndex(cat => cat === category);\n\n    if (index === -1) {\n      this.setState(prevState => ({\n        filter: [...prevState.filter, category],\n        page: 1\n      }), () => this.getFilteredMovies());\n    } else {\n      let filter = this.state.filter;\n      filter.splice(index, 1);\n      this.setState({\n        filter,\n        page: 1\n      }, () => this.getFilteredMovies());\n    }\n  }\n\n  getFilteredMovies() {\n    let filteredMovies = this.state.movies.filter(movie => this.state.filter.length === 0 || this.state.filter.find(cat => cat === movie.category));\n    console.log(filteredMovies.length);\n\n    if (filteredMovies.length === 0) {\n      this.setState({\n        filter: [],\n        filteredMovies: this.state.movies\n      }, () => this.setMaxPages());\n    } else {\n      this.setState({\n        filteredMovies\n      }, () => this.setMaxPages());\n    }\n  }\n\n  selectDisplay(count) {\n    this.setState({\n      display: count,\n      page: 1\n    }, () => this.setMaxPages());\n  }\n\n  firstPage() {\n    this.setState({\n      page: 1\n    });\n  }\n\n  changePage(count) {\n    let newPage = this.state.page + count;\n    if (newPage > 0 && newPage <= this.state.maxPages) this.setState({\n      page: newPage\n    });\n  }\n\n  lastPage() {\n    this.setState({\n      page: this.state.maxPages\n    });\n  }\n\n  setMaxPages() {\n    this.setState({\n      maxPages: Math.ceil(this.state.filteredMovies.length / this.state.display)\n    }, () => {\n      if (this.state.page > this.state.maxPages) {\n        this.changePage(-1);\n      }\n    });\n  }\n\n  renderMovies() {\n    if (!this.state.movies || !this.state.filteredMovies) return null;\n    let counter = 0;\n    let pageCounter = (this.state.page - 1) * this.state.display;\n    return this.state.filteredMovies.map((movie, index) => {\n      if (counter === this.state.display || index < pageCounter) return null;\n      counter++;\n      return /*#__PURE__*/React.createElement(Movie, {\n        key: movie.id,\n        id: movie.id,\n        title: movie.title,\n        category: movie.category,\n        likes: movie.likes,\n        dislikes: movie.dislikes,\n        onDelete: id => this.deleteMovie(id),\n        onLike: id => this.likeMovie(id),\n        onDislike: id => this.dislikeMovie(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MdReplay, {\n      className: \"refresh\",\n      onClick: () => this.refresh(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Multiselect, {\n      type: \"categories\",\n      options: this.getCategories(),\n      onSelect: category => this.selectCategory(category),\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Multiselect, {\n      type: \"display\",\n      options: [4, 8, 12],\n      onSelect: count => this.selectDisplay(count),\n      multiple: false,\n      selected: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(FlipMove, {\n      className: \"card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, this.renderMovies()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MdFirstPage, {\n      onClick: () => this.firstPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(MdChevronLeft, {\n      onClick: () => this.changePage(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }\n    }), \"Page \", this.state.page, /*#__PURE__*/React.createElement(MdChevronRight, {\n      onClick: () => this.changePage(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(MdLastPage, {\n      onClick: () => this.lastPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Soheib/Documents/Git/react-interview/src/App.js"],"names":["React","Component","MdReplay","MdChevronLeft","MdFirstPage","MdLastPage","AiFillCaretLeft","AiFillCaretRight","Movie","Multiselect","FlipMove","movies$","App","constructor","state","filter","display","page","componentDidMount","getMovies","then","movies","setState","JSON","parse","stringify","maxPages","Math","ceil","length","filteredMovies","refresh","document","querySelectorAll","forEach","el","classList","remove","getIndex","id","index","findIndex","movie","deleteMovie","splice","setMaxPages","getFilteredMovies","likeMovie","likes","dislikeMovie","dislikes","getCategories","categories","push","category","key","idx","lastIndexOf","selectCategory","cat","prevState","find","console","log","selectDisplay","count","firstPage","changePage","newPage","lastPage","renderMovies","counter","pageCounter","map","title","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MdReplay, MdChevronLeft,MdFirstPage,MdLastPage } from \"react-icons/md\";\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\nimport Movie from \"./Movie\";\nimport Multiselect from \"./Multiselect\";\nimport FlipMove from \"react-flip-move\";\nimport { movies$ } from \"./movies\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tfilter: [],\n\t\t\tdisplay: 4,\n\t\t\tpage: 1\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMovies();\n\t}\n\n\tgetMovies() {\n\t\tmovies$.then(movies =>\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tmovies: JSON.parse(JSON.stringify(movies)),\n\t\t\t\t\tmaxPages: Math.ceil(movies.length / this.state.display)\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tfilteredMovies: this.state.movies\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n\trefresh() {\n\t\tthis.getMovies();\n\t\tthis.setState({ filter: [] });\n\t\tdocument\n\t\t\t.querySelectorAll(\".filter-container.categories .dropdown div\")\n\t\t\t.forEach(el => {\n\t\t\t\tel.classList.remove(\"selected\");\n\t\t\t});\n\t}\n\n\tgetIndex(id) {\n\t\tlet index = this.state.movies.findIndex(movie => movie.id === id);\n\t\tif (index >= 0) return index;\n\t\treturn -1;\n\t}\n\n\tdeleteMovie(id) {\n\t\tlet movies = this.state.movies;\n\t\tlet index = this.getIndex(id);\n\t\tif (index >= 0) {\n\t\t\tmovies.splice(index, 1);\n\t\t\tthis.setState({ movies }, () => {\n\t\t\t\tthis.setMaxPages();\n\t\t\t\tthis.getFilteredMovies();\n\t\t\t});\n\t\t}\n\t}\n\n\tlikeMovie(id) {\n\t\tlet movies = this.state.movies;\n\t\tmovies[this.getIndex(id)].likes++;\n\t\tthis.setState({\n\t\t\tmovies\n\t\t});\n\t}\n\n\tdislikeMovie(id) {\n\t\tlet movies = this.state.movies;\n\t\tmovies[this.getIndex(id)].dislikes++;\n\t\tthis.setState({\n\t\t\tmovies\n\t\t});\n\t}\n\n\tgetCategories() {\n\t\tif (!this.state.movies) return null;\n\n\t\tlet categories = [];\n\t\tthis.state.movies.forEach(movie => {\n\t\t\tcategories.push(movie.category);\n\t\t});\n\t\treturn categories.filter((key, idx) => categories.lastIndexOf(key) === idx);\n\t}\n\n\tselectCategory(category) {\n\t\tlet index = this.state.filter.findIndex(cat => cat === category);\n\t\tif (index === -1) {\n\t\t\tthis.setState(\n\t\t\t\tprevState => ({\n\t\t\t\t\tfilter: [...prevState.filter, category],\n\t\t\t\t\tpage: 1\n\t\t\t\t}),\n\t\t\t\t() => this.getFilteredMovies()\n\t\t\t);\n\t\t} else {\n\t\t\tlet filter = this.state.filter;\n\t\t\tfilter.splice(index, 1);\n\t\t\tthis.setState({ filter, page: 1 }, () => this.getFilteredMovies());\n\t\t}\n\t}\n\n\tgetFilteredMovies() {\n\t\tlet filteredMovies = this.state.movies.filter(\n\t\t\tmovie =>\n\t\t\t\tthis.state.filter.length === 0 ||\n\t\t\t\tthis.state.filter.find(cat => cat === movie.category)\n\t\t);\n\t\tconsole.log(filteredMovies.length);\n\t\tif (filteredMovies.length === 0) {\n\t\t\tthis.setState({ filter: [], filteredMovies: this.state.movies }, () =>\n\t\t\t\tthis.setMaxPages()\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tfilteredMovies\n\t\t\t\t},\n\t\t\t\t() => this.setMaxPages()\n\t\t\t);\n\t\t}\n\t}\n\n\tselectDisplay(count) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdisplay: count,\n\t\t\t\tpage: 1\n\t\t\t},\n\t\t\t() => this.setMaxPages()\n\t\t);\n\t}\n\n\tfirstPage() {\n\t\tthis.setState({\n\t\t\tpage: 1\n\t\t});\n\t}\n\tchangePage(count) {\n\t\tlet newPage = this.state.page + count;\n\t\tif (newPage > 0 && newPage <= this.state.maxPages)\n\t\t\tthis.setState({\n\t\t\t\tpage: newPage\n\t\t\t});\n\t}\n\tlastPage() {\n\t\tthis.setState({\n\t\t\tpage: this.state.maxPages\n\t\t});\n\t}\n\n\tsetMaxPages() {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tmaxPages: Math.ceil(this.state.filteredMovies.length / this.state.display)\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (this.state.page > this.state.maxPages) {\n\t\t\t\t\tthis.changePage(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\trenderMovies() {\n\t\tif (!this.state.movies || !this.state.filteredMovies) return null;\n\n\t\tlet counter = 0;\n\t\tlet pageCounter = (this.state.page - 1) * this.state.display;\n\t\treturn this.state.filteredMovies.map((movie, index) => {\n\t\t\tif (counter === this.state.display || index < pageCounter) return null;\n\n\t\t\tcounter++;\n\t\t\treturn (\n\t\t\t\t<Movie\n\t\t\t\t\tkey={movie.id}\n\t\t\t\t\tid={movie.id}\n\t\t\t\t\ttitle={movie.title}\n\t\t\t\t\tcategory={movie.category}\n\t\t\t\t\tlikes={movie.likes}\n\t\t\t\t\tdislikes={movie.dislikes}\n\t\t\t\t\tonDelete={id => this.deleteMovie(id)}\n\t\t\t\t\tonLike={id => this.likeMovie(id)}\n\t\t\t\t\tonDislike={id => this.dislikeMovie(id)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"nav\">\n\t\t\t\t\t<MdReplay className=\"refresh\" onClick={() => this.refresh()} />\n\t\t\t\t\t<Multiselect\n\t\t\t\t\t\ttype=\"categories\"\n\t\t\t\t\t\toptions={this.getCategories()}\n\t\t\t\t\t\tonSelect={category => this.selectCategory(category)}\n\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<Multiselect\n\t\t\t\t\t\ttype=\"display\"\n\t\t\t\t\t\toptions={[4, 8, 12]}\n\t\t\t\t\t\tonSelect={count => this.selectDisplay(count)}\n\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\tselected={4}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FlipMove className=\"card-container\">{this.renderMovies()}</FlipMove>\n\t\t\t\t<div className=\"nav page\">\n\t\t\t\t\t<MdFirstPage onClick={() => this.firstPage()} />\n\t\t\t\t\t<MdChevronLeft onClick={() => this.changePage(-1)} />\n\t\t\t\t\tPage {this.state.page}\n\t\t\t\t\t<MdChevronRight onClick={() => this.changePage(1)} />\n\t\t\t\t\t<MdLastPage onClick={() => this.lastPage()} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}