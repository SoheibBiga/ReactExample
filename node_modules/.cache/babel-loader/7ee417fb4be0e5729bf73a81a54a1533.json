{"ast":null,"code":"var _jsxFileName = \"/Users/Soheib/Documents/Git/react-interview/src/Multiselect.js\";\nimport React, { Component } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport \"./Multiselect.css\";\nexport default class Multiselect extends Component {\n  selectOption(option) {\n    if (!this.props.multiple) {\n      document.querySelectorAll(\".filter-container.\" + this.props.type + \" .dropdown > div\").forEach(el => {\n        el.classList.remove(\"selected\");\n      });\n      this.selected = option;\n    }\n\n    document.querySelector(\".dropdown > div[option='\" + option + \"']\").classList.toggle(\"selected\");\n    this.props.onSelect(option);\n  }\n\n  renderSelect() {\n    return this.props.options.map(option => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: option,\n        option: option,\n        onClick: () => this.selectOption(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }\n      }, option));\n    });\n  }\n\n  toggleDropdown(e) {\n    if (e.target !== document.querySelector(\".filter-container.\" + this.props.type)) return;\n    document.querySelector(\".filter-container:not(.\" + this.props.type + \") .dropdown\").classList.remove(\"active\");\n    document.querySelector(\".filter-container.\" + this.props.type + \" .dropdown\").classList.toggle(\"active\");\n  }\n\n  componentDidMount() {\n    if (this.props.selected) {\n      document.querySelector(\".dropdown > div[option='\" + this.props.selected + \"']\").classList.toggle(\"selected\");\n      this.selected = this.props.selected;\n    }\n  }\n\n  render() {\n    if (!this.props.options || this.props.options.length === 0) return \"Aucun film disponible\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-container \" + this.props.type,\n      onClick: e => this.toggleDropdown(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    }, this.props.type === \"categories\" ? \"Filters\" : \"Display by \" + this.selected, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, this.renderSelect()));\n  }\n\n}","map":{"version":3,"sources":["/Users/Soheib/Documents/Git/react-interview/src/Multiselect.js"],"names":["React","Component","FlipMove","Multiselect","selectOption","option","props","multiple","document","querySelectorAll","type","forEach","el","classList","remove","selected","querySelector","toggle","onSelect","renderSelect","options","map","toggleDropdown","e","target","componentDidMount","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,mBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClDG,EAAAA,YAAY,CAACC,MAAD,EAAS;AACpB,QAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACzBC,MAAAA,QAAQ,CACNC,gBADF,CACmB,uBAAuB,KAAKH,KAAL,CAAWI,IAAlC,GAAyC,kBAD5D,EAEEC,OAFF,CAEUC,EAAE,IAAI;AACdA,QAAAA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoB,UAApB;AACA,OAJF;AAKA,WAAKC,QAAL,GAAgBV,MAAhB;AACA;;AAEDG,IAAAA,QAAQ,CACNQ,aADF,CACgB,6BAA6BX,MAA7B,GAAsC,IADtD,EAEEQ,SAFF,CAEYI,MAFZ,CAEmB,UAFnB;AAGA,SAAKX,KAAL,CAAWY,QAAX,CAAoBb,MAApB;AACA;;AAEDc,EAAAA,YAAY,GAAG;AACd,WAAO,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,GAAnB,CAAuBhB,MAAM,IAAI;AACvC,0BACC;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAkB,QAAA,MAAM,EAAEA,MAA1B;AAAkC,QAAA,OAAO,EAAE,MAAM,KAAKD,YAAL,CAAkBC,MAAlB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,MAAP,CADD,CADD;AAKA,KANM,CAAP;AAOA;;AAEDiB,EAAAA,cAAc,CAACC,CAAD,EAAI;AACjB,QAAIA,CAAC,CAACC,MAAF,KAAahB,QAAQ,CAACQ,aAAT,CAAuB,uBAAuB,KAAKV,KAAL,CAAWI,IAAzD,CAAjB,EACC;AAEDF,IAAAA,QAAQ,CACNQ,aADF,CACgB,4BAA4B,KAAKV,KAAL,CAAWI,IAAvC,GAA8C,aAD9D,EAEEG,SAFF,CAEYC,MAFZ,CAEmB,QAFnB;AAGAN,IAAAA,QAAQ,CACNQ,aADF,CACgB,uBAAuB,KAAKV,KAAL,CAAWI,IAAlC,GAAyC,YADzD,EAEEG,SAFF,CAEYI,MAFZ,CAEmB,QAFnB;AAGA;;AAEDQ,EAAAA,iBAAiB,GAAG;AACnB,QAAI,KAAKnB,KAAL,CAAWS,QAAf,EAAyB;AACxBP,MAAAA,QAAQ,CACNQ,aADF,CACgB,6BAA6B,KAAKV,KAAL,CAAWS,QAAxC,GAAmD,IADnE,EAEEF,SAFF,CAEYI,MAFZ,CAEmB,UAFnB;AAGA,WAAKF,QAAL,GAAgB,KAAKT,KAAL,CAAWS,QAA3B;AACA;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKpB,KAAL,CAAWc,OAAZ,IAAuB,KAAKd,KAAL,CAAWc,OAAX,CAAmBO,MAAnB,KAA8B,CAAzD,EACC,OAAO,uBAAP;AAED,wBACC;AACC,MAAA,SAAS,EAAE,sBAAsB,KAAKrB,KAAL,CAAWI,IAD7C;AAEC,MAAA,OAAO,EAAEa,CAAC,IAAI,KAAKD,cAAL,CAAoBC,CAApB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,KAAKjB,KAAL,CAAWI,IAAX,KAAoB,YAApB,GAAmC,SAAnC,GAA+C,gBAAgB,KAAKK,QAHtE,eAIC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKI,YAAL,EAA3B,CAJD,CADD;AAQA;;AA5DiD","sourcesContent":["import React, { Component } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport \"./Multiselect.css\";\n\nexport default class Multiselect extends Component {\n\tselectOption(option) {\n\t\tif (!this.props.multiple) {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".filter-container.\" + this.props.type + \" .dropdown > div\")\n\t\t\t\t.forEach(el => {\n\t\t\t\t\tel.classList.remove(\"selected\");\n\t\t\t\t});\n\t\t\tthis.selected = option;\n\t\t}\n\n\t\tdocument\n\t\t\t.querySelector(\".dropdown > div[option='\" + option + \"']\")\n\t\t\t.classList.toggle(\"selected\");\n\t\tthis.props.onSelect(option);\n\t}\n\n\trenderSelect() {\n\t\treturn this.props.options.map(option => {\n\t\t\treturn (\n\t\t\t\t<div key={option} option={option} onClick={() => this.selectOption(option)}>\n\t\t\t\t\t<span>{option}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\ttoggleDropdown(e) {\n\t\tif (e.target !== document.querySelector(\".filter-container.\" + this.props.type))\n\t\t\treturn;\n\n\t\tdocument\n\t\t\t.querySelector(\".filter-container:not(.\" + this.props.type + \") .dropdown\")\n\t\t\t.classList.remove(\"active\");\n\t\tdocument\n\t\t\t.querySelector(\".filter-container.\" + this.props.type + \" .dropdown\")\n\t\t\t.classList.toggle(\"active\");\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.selected) {\n\t\t\tdocument\n\t\t\t\t.querySelector(\".dropdown > div[option='\" + this.props.selected + \"']\")\n\t\t\t\t.classList.toggle(\"selected\");\n\t\t\tthis.selected = this.props.selected;\n\t\t}\n\t}\n\n\trender() {\n\t\tif (!this.props.options || this.props.options.length === 0)\n\t\t\treturn \"Aucun film disponible\";\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={\"filter-container \" + this.props.type}\n\t\t\t\tonClick={e => this.toggleDropdown(e)}>\n\t\t\t\t{this.props.type === \"categories\" ? \"Filters\" : \"Display by \" + this.selected}\n\t\t\t\t<div className=\"dropdown\">{this.renderSelect()}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}